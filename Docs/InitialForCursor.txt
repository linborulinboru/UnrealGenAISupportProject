# 解決 Cursor/VS Code 中 Unreal Engine C++ #include 錯誤的問題

## 問題描述

在使用 Cursor、VS Code 或其他基於 VS Code 的編輯器處理 Unreal Engine (UE) 的 C++ 專案時，經常會遇到編輯器對 `#include` 指令報錯（例如出現紅色波浪線，提示找不到標頭檔），即使這些專案在 Visual Studio 中能夠成功編譯。

**原因：**

*   **Visual Studio:** 使用由 Unreal Build Tool (UBT) 生成的 `.sln` 和 `.vcxproj` 文件。這些文件包含了 UBT 計算出的精確編譯信息，包括所有必要的 Include 路徑和 Preprocessor Defines。
*   **Cursor/VS Code:** 依賴內部的 C++ 語言伺服器 (如 Microsoft C/C++ Extension 或 Clangd) 來進行語法分析和錯誤檢查。語言伺服器需要**獨立地**被告知專案的 Include 路徑和 Defines，它**不會**自動使用 UBT 的完整建置資訊。如果未正確配置，語言伺服器就找不到引擎、插件或專案模組的標頭檔。

## 解決方案：使用 `compile_commands.json`

最可靠且推薦的解決方案是生成 `compile_commands.json` 文件，並讓編輯器的 C++ 擴充功能使用它。這個 JSON 文件包含了專案中每個源文件的詳細編譯指令。

## 操作步驟

### 1. 生成 `compile_commands.json`

雖然有時通過 IDE 或右鍵選單生成 VS 專案檔也能附帶生成此文件，但最可靠的方法是使用命令列直接調用 Unreal Build Tool (UBT)。

**a. 找到 UnrealBuildTool.exe：**

   *   對於 **原始碼 (Source Build)** 引擎 (例如從 GitHub 下載)：
     ```
     <PathToYourEngine>\Engine\Binaries\DotNET\UnrealBuildTool\UnrealBuildTool.exe
     ```
     (例如: `D:\GitHub\UnrealEngine\Engine\Binaries\DotNET\UnrealBuildTool\UnrealBuildTool.exe`)
   *   對於 **二進位 (Binary Build)** 引擎 (例如從 Epic Games Launcher 安裝)：
     ```
     C:\Program Files\Epic Games\UE_X.Y\Engine\Binaries\DotNET\UnrealBuildTool\UnrealBuildTool.exe
     ```

**b. 打開命令提示字元 (cmd) 或 PowerShell。**

**c. 切換到你的專案根目錄 (包含 `.uproject` 文件的目錄)：**

   ```bash
   cd /d "<PathToYourProject>"